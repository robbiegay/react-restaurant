{"version":3,"sources":["Header.js","Card.js","Menu.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","restFirstName","restSecondName","x","Math","floor","random","y","className","this","openAt","closeAt","Fragment","randomName","randomHours","React","Component","Card","mealTitle","mealPrice","mealDescription","Menu","state","menuItems","menuArr","that","i","fetch","then","response","json","data","menu_items","push","length","localStorage","setItem","JSON","stringify","setState","parse","window","menu","getMenuItems","ceil","type","num","words","description","split","toUpperCase","slice","startingIdx","text","price","getText","setPrice","id","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","genItem","Layout","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.619e1c7c.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.restFirstName = [\"Robbie's\", 'Hometown', 'Local', 'Pretty Decent', 'Organic'];\n        this.restSecondName = ['Yummy Stuff', 'Inventions', 'Food', 'Plates', 'Experience', 'Snacks', 'Express'];\n    }\n\n    // Generates a random restaurant name\n    randomName() {\n        let x = Math.floor(Math.random() * 5);\n        let y = Math.floor(Math.random() * 7);\n        return <h1 className='text-primary'>{this.restFirstName[x]} {this.restSecondName[y]}</h1>;\n    }\n\n    // Generates random restaurant operating hours\n    randomHours() {\n        const earliestTime = 6;\n        let openAt = earliestTime + Math.floor(Math.random() * 5);\n        let closeAt = Math.floor(Math.random() * 6);\n        return <h2>Hours: {openAt}am â€“ {openAt - closeAt}pm</h2>\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.randomName()}\n                <h2 className='text-secondary'>348 E. Main St., Lexington, KY</h2>\n                {this.randomHours()}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\n// Card for each menu item\nclass Card extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className='card'>\n                    <div className='card-body'>\n                        <h5 className='card-title'>{this.props.mealTitle}</h5>\n                        <h6 className='card-subtitle mb-2 text-muted'>{this.props.mealPrice}</h6>\n                        <p className='card-text'>{this.props.mealDescription}</p>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // A default starting item, otherwise was getting error: Cannot read property '0' of null\n            menuItems: 'Generic Food',\n        };\n    }\n\n    getMenuItems() {\n        let menuArr = [];\n        // 'this' can't be accessed in fetch, so I pass it in as a variable\n        const that = this;\n        for (let i = 0; i < 2; i++) {\n            fetch('https://entree-f18.herokuapp.com/v1/menu/12').then(function (response) {\n                response.json().then(function (data) {\n                    for (let i in data.menu_items) {\n                        menuArr.push(data.menu_items[i]);\n                    }\n                    // Wait until fetch has been called both times, then set local state\n                    // Otherwise, was getting an error where the first fetch was called,\n                    // then, while the second fetch was running, the menu was already starting to build\n                    if (menuArr.length === 24) {\n                        localStorage.setItem('menu', JSON.stringify(menuArr));\n                        that.setState({ menuItems: JSON.parse(window.localStorage.menu) });\n                    }\n                });\n            });\n        }\n    }\n\n    // Controller\n    componentDidMount() {\n        // If there is nothing in Local Storage, call the API\n        if (!window.localStorage.length) {\n            this.getMenuItems();\n        } else {\n            this.setState({ menuItems: JSON.parse(window.localStorage.menu) });\n        }\n    }\n\n    // Generates random prices: low, medium, and high price range options\n    setPrice(x) {\n        const priceRange = [5, 10, 15]\n        return `$${Math.ceil(Math.random() * 5) + priceRange[x]}`;\n    }\n\n    // The API returns 12 random food descriptions. I found that the first two words\n    // make a good title, and from the second word on makes a good menu description\n    getText(type, num) {\n        if (this.state.menuItems !== 'Generic Food') {\n            // Splits the description into an array of words\n            let words = this.state.menuItems[num].description.split(' ');\n            if (type === 'title') {\n                // Takes word idx 0 and word idx 1 (capitalizes first letter of word idx 1)\n                return words[0] + ' ' + words[1][0].toUpperCase() + words[1].slice(1);\n            }\n            // Else, Capitalizes the first letter of word idx 1, and returns description from word 1 to end\n            let startingIdx = words[0].length + 1;\n            let text = this.state.menuItems[num].description.slice(startingIdx);\n            return text[0].toUpperCase() + text.slice(1);\n        }\n    }\n\n    genItem(num, price) {\n        return <Card mealTitle={this.getText('title', num)} mealPrice={this.setPrice(price)} mealDescription={this.getText('des', num)} />\n    }\n\n    render() {\n        // Waits for local storage to load\n        if (!window.localStorage.length) {\n            return (\n                <div>loading...</div>\n            )\n        } else {\n            return (\n                <React.Fragment >\n                    <ul className='nav nav-pills nav-justified mb-3' id='pills-tab' role='tablist'>\n                        <li className='nav-item'>\n                            <a className='nav-link active' id='apps-tab' data-toggle='pill' href='#pills-apps' role='tab' aria-controls='pills-apps' aria-selected='true'>Appetizers</a>\n                        </li>\n                        <li className='nav-item'>\n                            <a className='nav-link' id='lunch-tab' data-toggle='pill' href='#pills-lunch' role='tab' aria-controls='pills-lunch' aria-selected='false'>Lunch</a>\n                        </li>\n                        <li className='nav-item'>\n                            <a className='nav-link' id='snacks-tab' data-toggle='pill' href='#pills-snacks' role='tab' aria-controls='pills-snacks' aria-selected='false'>Snacks</a>\n                        </li>\n                        <li className='nav-item'>\n                            <a className='nav-link' id='dinner-tab' data-toggle='pill' href='#pills-dinner' role='tab' aria-controls='pills-dinner' aria-selected='false'>Dinner</a>\n                        </li>\n                        <li className='nav-item'>\n                            <a className='nav-link' id='secondDinner-tab' data-toggle='pill' href='#pills-secondDinner' role='tab' aria-controls='pills-secondDinner' aria-selected='false'>Second Dinner</a>\n                        </li>\n                    </ul>\n                    <div className='tab-content' id='pills-tabContent'>\n                        <div className='tab-pane fade show active' id='pills-apps' role='tabpanel' aria-labelledby='apps-tab'>\n                            {this.genItem(0, 0)}\n                            {this.genItem(1, 0)}\n                            {this.genItem(2, 0)}\n                            {this.genItem(3, 1)}\n                            {this.genItem(4, 0)}\n                        </div>\n                        <div className='tab-pane fade' id='pills-lunch' role='tabpanel' aria-labelledby='lunch-tab'>\n                            {this.genItem(5, 1)}\n                            {this.genItem(6, 1)}\n                            {this.genItem(7, 2)}\n                            {this.genItem(8, 1)}\n                            {this.genItem(9, 2)}\n                            {this.genItem(10, 1)}\n                        </div>\n                        <div className='tab-pane fade' id='pills-snacks' role='tabpanel' aria-labelledby='snacks-tab'>\n                            {this.genItem(11, 0)}\n                            {this.genItem(12, 0)}\n                            {this.genItem(13, 1)}\n                            {this.genItem(14, 0)}\n                            {this.genItem(15, 0)}\n                        </div>\n                        <div className='tab-pane fade' id='pills-dinner' role='tabpanel' aria-labelledby='dinner-tab'>\n                            {this.genItem(16, 2)}\n                            {this.genItem(17, 1)}\n                            {this.genItem(18, 2)}\n                            {this.genItem(19, 2)}\n                        </div>\n                        <div className='tab-pane fade' id='pills-secondDinner' role='tabpanel' aria-labelledby='secondDinner-tab'>\n                            {this.genItem(20, 1)}\n                            {this.genItem(21, 2)}\n                            {this.genItem(22, 2)}\n                            {this.genItem(23, 2)}\n                        </div>\n                    </div>\n                </React.Fragment >\n            );\n        }\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport Header from './Header.js';\nimport Menu from './Menu.js';\n\n// Adds a Bootstrap layout to the App\n\nclass Layout extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className='container-fluid'>\n                    <div className='row'>\n                        <div className='col-0 col-sm-0 col-md-1 col-lg-2' />\n                        <div className='col-12 col-sm-12 col-md-10 col-lg-8 text-center'>\n                            <Header />\n                            <Menu />\n                        </div>\n                        <div className='col-0 col-sm-0 col-md-1 col-lg-2' />\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport Layout from './Layout.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // 'Content is cached for offline use.' message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}